name: Deployment
on: push
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
          environment: testing
          runs-on: ubuntu-latest
          container:
              image: node:16
          env:
              MONGODB_CONNECTION: mongodb
              MONGODB_CLUSTER_ADDRESS: mongodb
              MONGODB_USERNAME: root
              MONGODB_PASSWORD: root
              PORT: 8080
          services:
              mongodb:
                  image: mongo
                  env:
                      MONGODB_INITDB_ROOT_USERNAME: root
                      MONGODB_INITDB_ROOT_PASSWORD: root 
          steps:
              - name: get code
                uses: actions/checkout@v3
              - name: get caches
                uses: actions/cache@v3
                with:
                  path: ~/.npm
                  key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/NodeApp/package-lock.json') }}
              - name: start server
                run: npm start & npx wait-on http://127.0.0.1:$PORT
              - name: install dependencies
                run: npm ci
              - name: Run npm tests
                run: npm test      
  test1:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."